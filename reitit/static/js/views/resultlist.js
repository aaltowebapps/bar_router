// Generated by CoffeeScript 1.3.1

window.ResultsView = Backbone.View.extend({
  initialize: function() {
    return this.template = _.template(tpl.get('results'));
  },
  events: {
    "click .back": "back"
  },
  render: function() {
    $(this.el).html(this.template());
    if (!this.model) {
      this.updateModel();
    } else {
      this.generateList();
    }
    return this;
  },
  updateParams: function() {
    var time, timetype;
    this.params = {
      from: getUrlParam("from"),
      to: getUrlParam("to")
    };
    time = getUrlParam("time");
    timetype = getUrlParam("timetype");
    if (time) {
      this.params.time = time;
    }
    if (timetype) {
      return this.params.timetype = timetype;
    }
  },
  updateModel: function() {
    var _this = this;
    $(this.el).find("#routelist").html("");
    $(this.el).find("#loader").css("display", "block");
    this.updateParams();
    return Reittiopas.route(this.params, function(results) {
      _this.model = _this.processRoutes(results);
      $(_this.el).find("#loader").hide();
      return _this.generateList();
    });
  },
  generateList: function() {
    var routelist,
      _this = this;
    routelist = $(this.el).find("#routelist");
    _.each(this.model, function(route) {
      var item;
      item = new ResultsViewItem({
        model: route
      }).render().el;
      return routelist.append(item);
    });
    return routelist.listview('refresh');
  },
  processRoutes: function(routes) {
    var output;
    output = [];
    _.each(routes, function(route) {
      var last, legs;
      route = route[0];
      legs = [];
      _.each(route.legs, function(leg) {
        var locs;
        if (leg.type === "walk") {
          leg.type = "walk";
          leg.code = null;
        } else if (["1", "3", "4", "5"].indexOf(leg.type) !== -1) {
          leg.type = "bus";
          leg.code = $.trim(leg.code.slice(1, 5));
          if (leg.code[0] === "0") {
            leg.code = leg.code.slice(1);
          }
        } else if (leg.type === "2") {
          leg.type = "tram";
          leg.code = $.trim(leg.code.slice(2, 5));
          if (leg.code[0] === "0") {
            leg.code = leg.code.slice(1);
          }
        } else if (leg.type === "12") {
          leg.type = "train";
          leg.code = $.trim(leg.code.slice(4, 5));
        } else if (leg.type = "6") {
          leg.type = "metro";
          leg.code = "Metro";
        }
        locs = [];
        _.each(leg.locs, function(loc) {
          loc.arrTime = loc.arrTime.slice(8, 10) + ":" + loc.arrTime.slice(10, 12);
          loc.depTime = loc.depTime.slice(8, 10) + ":" + loc.depTime.slice(10, 12);
          return locs.push(loc);
        });
        leg.locs = locs;
        return legs.push(leg);
      });
      route.legs = legs;
      route.depTime = route.legs[0].locs[0].depTime;
      if (route.legs[0].type === "walk" && route.legs.length > 1) {
        route.depTimeStop = route.legs[1].locs[0].depTime;
      } else {
        route.depTimeStop = route.legs[0].locs[0].depTime;
      }
      last = route.legs.slice(-1)[0];
      route.arrTime = last.locs.slice(-1)[0].arrTime;
      if (last.type === "walk" && route.legs.length > 1) {
        route.arrTimeStop = route.legs.slice(-2)[0].locs.slice(-1)[0].arrTime;
      } else {
        route.arrTimeStop = last.locs.slice(-1)[0].arrTime;
      }
      return output.push(route);
    });
    console.log(output);
    return output;
  }
});

window.ResultsViewItem = Backbone.View.extend({
  tagName: "li",
  events: {
    "click a": "showRoute"
  },
  showRoute: function() {
    app.navigate("#showRoute");
    return app.resultMap(this.model);
  },
  initialize: function() {
    return this.template = _.template(tpl.get('result-item'));
  },
  render: function() {
    $(this.el).html(this.template({
      route: this.model
    }));
    return this;
  }
});
