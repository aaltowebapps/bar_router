// Generated by CoffeeScript 1.3.1

window.InputView = Backbone.View.extend({
  events: {
    "submit": "submit",
    "click #inputFav": "toggleFavState"
  },
  initialize: function() {
    this.template = _.template(tpl.get('input'));
    this.favorites = new Favorites();
    this.favorites.bind('add', this.addOne, this);
    return this.favorites.bind('reset', this.addAll, this);
  },
  render: function() {
    this.value = getUrlParam("value");
    $(this.el).html(this.template({
      currentInput: this.value
    }));
    this.favlist = $(this.el).find("#favlist");
    this.favorites.fetch();
    this.addAll();
    return this;
  },
  submit: function(event) {
    event.preventDefault();
  },
  addOne: function(item) {
    var address;
    address = item.get("address");
    if (address !== void 0 && address !== "") {
      item = new FavoriteItemView({
        model: item
      }).render().el;
      console.debug("Adding one...");
      console.debug($("#favlist"));
      $("#favlist").append(item);
      $("#favlist").listview("refresh");
    }
  },
  addAll: function() {
    var _this = this;
    _.each(this.favorites.models, function(result, index) {
      var item;
      item = new FavoriteItemView({
        model: result
      }).render().el;
      return _this.favlist.append(item);
    });
    try {
      this.favlist.listview("refresh");
    } catch (error) {
      console.debug(error);
    }
  },
  toggleFavState: function(event) {
    var address, el, enabled;
    el = event.currentTarget;
    enabled = el.src.indexOf("off") !== -1;
    if (enabled) {
      el.src = el.src.replace("off", "on");
    } else {
      el.src = el.src.replace("on", "off");
    }
    address = $("#input")[0].value;
    if (enabled) {
      this.favorites.create({
        address: address
      });
    } else {
      this.favorites.each(function(item) {
        return item.destroy;
      });
    }
  }
});

window.FavoriteItemView = Backbone.View.extend({
  tagname: "li",
  initialize: function() {
    this.model.bind('change', this.render, this);
    return this.template = _.template(tpl.get('favorite-item'));
  },
  render: function() {
    $(this.el).html(this.template({
      address: this.model.get("address"),
      index: this.options.index
    }));
    return this;
  },
  clear: function() {
    return this.model.destroy();
  }
});
